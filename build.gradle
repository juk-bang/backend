plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'java'
}

group = 'com.jukbang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    compile "org.springframework.boot:spring-boot-configuration-processor"

    //for Slack Logback
    compile 'net.gpedro.integrations.slack:slack-webhook:1.4.0'
    implementation 'org.apache.commons:commons-text:1.8'
    compile 'eu.bitwalker:UserAgentUtils:1.21'

    //for JWt Auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    compile 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.2',
            'io.jsonwebtoken:jjwt-jackson:0.11.2'

// Test And RestDocs
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
}


ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('outputsDir',file("build/generated-docs"))
    set('docsDir',file("docs"))
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task copyRestDocs(type: Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}/html5"
    into "${sourceSets.main.output.resourcesDir}/static/docs"
    from "${asciidoctor.outputDir}/html5"
    into "${docsDir}"
    rename{
        String fileName->
            fileName.replace("index.html","ApiDocs.html")
    }
}

bootJar {
    dependsOn copyRestDocs
}
